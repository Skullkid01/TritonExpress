// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TritonExpress.Data;

namespace TritonExpress.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220518090516_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TritonExpress.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("TritonExpress.Models.Vehicles", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("vehicleModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleRegistration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("BranchId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("TritonExpress.Models.WayBill", b =>
                {
                    b.Property<int>("wayBillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("parcels")
                        .HasColumnType("int");

                    b.Property<double>("totalWeight")
                        .HasColumnType("float");

                    b.Property<string>("wayBillReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("wayBillId");

                    b.HasIndex("VehicleId");

                    b.ToTable("WayBills");
                });

            modelBuilder.Entity("TritonExpress.Models.Vehicles", b =>
                {
                    b.HasOne("TritonExpress.Models.Branch", "Branch")
                        .WithMany("Vehicles")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("TritonExpress.Models.WayBill", b =>
                {
                    b.HasOne("TritonExpress.Models.Vehicles", "Vehicles")
                        .WithMany("WayBills")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("TritonExpress.Models.Branch", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("TritonExpress.Models.Vehicles", b =>
                {
                    b.Navigation("WayBills");
                });
#pragma warning restore 612, 618
        }
    }
}
